import java.io.Serializable;
import java.util.*;

import com.sun.org.apache.bcel.internal.generic.NEW;
import com.sun.tools.javac.code.Attribute.Array;

/**
 * @author 一个有趣的人
 * @author 3410322436@qq.com
 */
public class Database implements Serializable {
	private HashMap<String,Dish> dishTable = new HashMap<String,Dish>();
	private HashMap<Integer,Order> orderTable = new HashMap<Integer,Order>();
	private HashMap<Date,Bill> dayBillTable = new HashMap<Date,Bill>();
	private HashMap<Integer,User> userTable = new HashMap<Integer,User>();
	private HashMap<String, ArrayList<Integer>> role = new HashMap<String, ArrayList<Integer>>();
	private static Integer orderID = 1;
	public Database() {
		role.put("None", new ArrayList<Integer>(0));
		ArrayList<Integer> rolePriority = new ArrayList<Integer>(Arrays.asList(0,1,2));
		role.put("None", rolePriority);
	}
	
	/**
	 * 这里都是Database自带方法，用户无法选择的f f
	 */
	public String userVerify(String[] userInfo) {
		Integer userID = Integer.parseInt(userInfo[0]);
		String passwd = userInfo[1];
		User user = userTable.get(userID);
		if (passwd.equals(user.password)) {
			return user.priority;
		}
		return String.valueOf(Flag.LoginError);
	}
	
	public void addUsers(int userID, String name, String password, String priority) {
		userTable.put(userID, new User(name, password, priority));
	}
	public void createOrder(int tableID) {
		Date orderTime = new Date();
		orderTable.put(orderID++, new Order(tableID, orderTime));
	}
	public void saveDayReport(float amount) {
		Date day = new Date();
		dayBillTable.put(day, new Bill(amount));
	}
	public void addDish(String name, float price) {
		dishTable.put(name, new Dish(price));
	}
	public void noDish(String name) {
		dishTable.get(name).isAvailble = false;
	}
	public void yesDish(String name) {
		dishTable.get(name).isAvailble = true;
	}
	// 未完待续
}
/**
 * 下面是基本的数据项
 */
class Dish implements Serializable{
	float price;
	boolean isAvailble = false;
	public Dish(float price) {
		this.price = price;
	}
}

class Order implements Serializable {
	int tableID;
	Date orderTime;
	float amount;
	ArrayList<Dish> dishList = new ArrayList<Dish>();
	ArrayList<Integer> leftDishLish = new ArrayList<Integer>();
	public Order(int tableID, Date orderTime) {
		this.tableID = tableID;
		this.orderTime = orderTime;
	}
}

class Bill implements Serializable {
	float amount;
	public Bill(float amount) {
		this.amount = amount;
	}
}

class User implements Serializable {
	String name;
	String password;
	String priority;
	public User(String name, String password, String priority) {
		this.name = name;
		this.password = password;
		this.priority = priority;
	}
}